{"id": 0, "task": "add", "prompt": "Write a python function 'add(a,b)' that adds two numbers(a,b) and returns the result.", "tests": [[1, 2], [-1, 5], [0, 0], [-3, -7], [100, 200], [-100, -50], [1.5, 2.5], [1, -1], [999999, 1], [-999999, 999999], [3.14, 2.86], [0, 5], [-5, 0], [123, -23], [-0.5, -0.5], [42, 58], [106, 106], [-106, 106], [7, -3.5], [1000000000, -1000000000]], "answers": [3, 4, 0, -10, 300, -150, 4.0, 0, 1000000, 0, 6.0, 5, -5, 100, -1.0, 100, 212, 0, 3.5, 0.0]}
{"id": 1, "task": "average", "prompt": "Write a python function 'average(nums)' that averages a set of numbers (nums) and returns the result.", "tests": [[1,2,3],[1.0,2.0,3.0],[-1,1],[10],[],[0,0,0],[2,2],[100,200,300,400],[-5,-10,-15],[0.1,0.2,0.3],[1,2,3,4,5,6,7,8,9,10],[3.5,4.5],[1e6,1e6,1e6],[-1e3,1e3],[2.5],[9,11],[1,-1,1,-1],[0.3333333,0.3333333,0.3333334],[42],[100,-50,25,-75,0]], "answers": [2.0,2.0,0.0,10.0,0.0,0.0,2.0,250.0,-10.0,0.2,5.5,4.0,1000000.0,0.0,2.5,10.0,0.0,0.3333333333333333,42.0,0.0]}
{"id": 2, "task": "factorial", "prompt": "Write a python function 'factorial(n)' that finds the factorial of a number(n) and returns the result.", "tests": [0,1,2,3,4,5,6,7,8,9,10,11,12,-1,-5,13,3,1,15,20], "answers": [1,1,2,6,24,120,720,5040,40320,362880,3628800,39916800,479001600,"ValueError","ValueError",6227020800,6,1,1307674368000,2432902008176640000]}
{"id": 3, "task": "is_palindrome", "prompt": "Write a python function 'is_palindrome(s)' that accepts a string and decides whether or not it is a palindrome. Returns a boolean.", "tests": ["racecar","Race Car","nurses run","hello","A man a plan a canal Panama",""," ","abba","abcba","abca","Noon","no on","Able was I ere I saw Elba","ðŸ˜€madamðŸ˜€","Madam, I'm Adam","step on no pets","Was it a car or a cat I saw?","palindrome","1234321","123421"], "answers": [true,true,true,false,true,true,true,true,true,false,true,true,true,true,true,true,true,false,true,false]}
{"id": 4, "task": "reverse_words", "prompt": "Write a python function 'reverse_words(s)' that accepts a string, returns the string in reverse word order and collapses whitespace.", "tests": ["hello world"," multiple spaces here ","a","ðŸ˜€ smile wide","ä½ å¥½ ä¸–ç•Œ","", "one two three"," leading","trailing "," both sides ","punctuation, stays? here!","mixed CASE Words","tab\tseparated\tvalues","new\nline test","spaces tabs\tmix","double spaces","word","foo bar baz","Unicode cafÃ© au lait"," "], "answers": ["world hello","here spaces multiple","a","wide smile ðŸ˜€","ä¸–ç•Œ ä½ å¥½","", "three two one","leading","trailing","sides both","here! stays? punctuation,","Words CASE mixed","values\tseparated\ttab","test line\nnew","mix\ttabs spaces","spaces double","word","baz bar foo","lait au cafÃ© Unicode",""]}
{"id": 5, "task": "is_prime", "prompt": "Write a python function 'is_prime(n)' that accepts a number and decides whether or not it is a a prime number. Returns a boolean.", "tests": [0,1,2,3,4,5,17,18,19,97,100,7919,7920,29,49,53,57,61,83,121], "answers": [false,false,true,true,false,true,true,false,true,true,false,true,false,true,false,true,false,true,true,false]}
{"id": 6, "task": "fizzbuzz", "prompt": "Write a Python function fizzbuzz(n: int) that returns 'FizzBuzz' if n is divisible by 3 and 5, 'Fizz' if only by 3, 'Buzz' if only by 5, otherwise the str(number). Return only the function code, no extra text.", "tests": [1,2,3,4,5,6,9,10,12,15,16,18,20,21,25,27,30,31,33,35], "answers": ["1","2","Fizz","4","Buzz","Fizz","Fizz","Buzz","Fizz","FizzBuzz","16","Fizz","Buzz","Fizz","Buzz","Fizz","FizzBuzz","31","Fizz","Buzz"]}
{"id": 7, "task": "merge_sorted_lists", "prompt": "Write a python function 'merge_sorted_lists(a,b)' that accepts two lists (a,b) and then merges and sorts them. Returns the merged and sorted list.", "tests": [[[1,3,5],[2,4,6]],[[],[1,2]],[[1,2],[]],[[1,1,2],[1,3]],[[0,2,2],[2,2,3]],[[5,7,9],[1,2,3]],[[10,20],[15,25]],[[0],[0]],[[-5,-3,-1],[-4,-2,0]],[[100],[50,150]],[[1,2,2,3],[2,2,4]],[[],[]],[[1],[2]],[[2,2,2],[2,2]],[[3,5,7],[7,9,11]],[[-10,0,10],[-10,0,10]],[[],[0]],[[0],[]],[[1,3,5,7],[2,4,6,8]],[[-1,-1],[-1,-1]]], "answers": [[1,2,3,4,5,6],[1,2],[1,2],[1,1,1,2,3],[0,2,2,2,2,3],[1,2,3,5,7,9],[10,15,20,25],[0,0],[-5,-4,-3,-2,-1,0],[50,100,150],[1,2,2,2,2,3,4],[],[1,2],[2,2,2,2,2],[3,5,7,7,9,11],[-10,-10,0,0,10,10],[0],[0],[1,2,3,4,5,6,7,8],[-1,-1,-1,-1]]}
{"id": 8, "task": "csv_to_dicts", "prompt": "Write a python function 'csv_to_dicts(csv_str)' that accepts a CSV formatted string and converts it to a dictionary. One dictionary per row with the CSV headers as the keys.", "tests": ["name,age\nAlice,30\nBob,25\n","name,city,zip\n\n\n","","a,b\n1,2\n3,4\n","h1,h2\nx,\n,y\n","onlyheader\n","k,v\n1,\n,2\n","a,b,c\n1,2,3\n4,5,6\n","id,val\n1,10\n2,20\n3,30\n","q,r\n"a,b",c\n"d","e,f"\n","spaced,trim\n a , b \n c , d \n","num\n001\n010\n","unicode,emoji\ncafÃ©,â˜•\nnaÃ¯ve,ðŸ™‚\n","mixed\n"quoted"\nplain\n","a,b\n1,\n2, \n ,3\n","x,y\n, \n \n1,2\n","head1,head2\n-,-\n","A,B\n"1,2,3",4\n","key,val\n"comma, inside",42\n","weird,empty\n,\n,\n"], "answers": [[{"name":"Alice","age":"30"},{"name":"Bob","age":"25"}],[],[],[{"a":"1","b":"2"},{"a":"3","b":"4"}],[{"h1":"x","h2":""},{"h1":"","h2":"y"}],[],[{"k":"1","v":""},{"k":"","v":"2"}],[{"a":"1","b":"2"},{"a":"4","b":"5"},{"a":"6","b":"3"}],[{"id":"1","val":"10"},{"id":"2","val":"20"},{"id":"3","val":"30"}],[{"q":"a,b","r":"c"},{"q":"d","r":"e,f"}],[{"spaced":" a ","trim":" b "},{"spaced":" c ","trim":" d "}],[{"num":"001"},{"num":"010"}],[{"unicode":"cafÃ©","emoji":"â˜•"},{"unicode":"naÃ¯ve","emoji":"ðŸ™‚"}],[{"mixed":"quoted"},{"mixed":"plain"}],[{"a":"1","b":""},{"a":"2","b":" "},{"a":" ","b":"3"}],[{"x":"","y":" "},{"x":" ","y":""},{"x":"1","y":"2"}],[{"head1":"-","head2":"-"}],[{"A":"1,2,3","B":"4"}],[{"key":"comma, inside","val":"42"}],[{"weird":"","empty":""},{"weird":"","empty":""}]]}